#include <lpc214x.h>
void delay(unsigned int time)
{
unsigned int i, j;
for(i = 0; i < time; i++)
{
for(j = 0; j < 257; j++);
}
}
void UART0_init()
{
PINSEL0 |= 0x00000005; // Set P0.0 as RXD0 and P0.1 as TXD0
U0LCR = 0x83; // 8 bits, no parity, 1 stop bit, DLAB = 1
U0DLM = 0x00; // Set baud rate divisor (high byte)
U0DLL = 0x61; // Set baud rate divisor (low byte) for 9600 baud rate
U0LCR = 0x03; // 8 bits, no parity, 1 stop bit, DLAB = 0
U0FCR = 0x07; // Enable FIFO, clear RX and TX FIFO
}
void UART1_init()
{
PINSEL0 |= 0x00050000; // Set P0.8 as RXD1 and P0.9 as TXD1
U1LCR = 0x83; // 8 bits, no parity, 1 stop bit, DLAB = 1
U1DLM = 0x00; // Set baud rate divisor (high byte)
U1DLL = 0x61; // Set baud rate divisor (low byte) for 9600 baud rate
U1LCR = 0x03; // 8 bits, no parity, 1 stop bit, DLAB = 0
U1FCR = 0x07; // Enable FIFO, clear RX and TX FIFO
}
// Function to transmit data through UART0
void UART0_xmit(unsigned char data)
{
while(!(U0LSR & 0x20)); // Check if transmitter holding register is empty
U0THR = data;

}
// Function to receive data from UART1
unsigned char UART1_rcv(void)
{
unsigned int a;
while(!(U1LSR & 0x01)); // Wait for data to be received
return(U1RBR);
// while(!(U0LSR&0x20));
// U0THR=a;
}
int main(void)
{
UART0_init();
UART1_init();
unsigned char received_data;
while(1)
{
received_data = UART1_rcv(); // Receive data from UART0
UART0_xmit(received_data); // Transmit received data to UART1
}
return 0;
}
